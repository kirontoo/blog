<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on Kironto</title><link>https://blog.rxkiro.xyz/tags/vim/</link><description>Recent content in vim on Kironto</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Sat, 21 Nov 2020 19:33:51 -0800</lastBuildDate><atom:link href="https://blog.rxkiro.xyz/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Useful Vim Tricks</title><link>https://blog.rxkiro.xyz/posts/vim-tricks/</link><pubDate>Sat, 21 Nov 2020 19:33:51 -0800</pubDate><guid>https://blog.rxkiro.xyz/posts/vim-tricks/</guid><description>Append Output Of A External Command To Your Buffer The :read command can insert a file or the output of an external program into the current buffer. To run a program just prefix the shell command with !.
Example:
:read !echo &amp;#34;hello&amp;#34; You can also specify the line you want to output to. Just prefix read with a number and it will output to that line. Example:
:12read !echo &amp;#34;hello&amp;#34; To output to a certain number of lines before your current line, prefix with - number of lines.</description><content>&lt;h2 id="append-output-of-a-external-command-to-your-buffer">Append Output Of A External Command To Your Buffer&lt;/h2>
&lt;p>The &lt;code>:read&lt;/code> command can insert a file or the output of an external program into the current buffer.
To run a program just prefix the shell command with &lt;code>!&lt;/code>.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:&lt;span style="color:#a6e22e">read&lt;/span> !&lt;span style="color:#a6e22e">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also specify the line you want to output to. Just prefix &lt;code>read&lt;/code> with a number and it will output to that line.
Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:&lt;span style="color:#ae81ff">12&lt;/span>read !&lt;span style="color:#a6e22e">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To output to a certain number of lines before your current line, prefix with &lt;code>-&lt;/code> number of lines.
&lt;code>-&lt;/code> for before.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:&lt;span style="color:#ae81ff">-12&lt;/span>read !&lt;span style="color:#a6e22e">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-new-file-in-the-same-directory-as-the-current-buffer">Create A New File In The Same Directory As The Current Buffer&lt;/h2>
&lt;p>&lt;code>%:h&lt;/code> will autocomplete the folder path for you. Press &amp;lsquo;&lt;TAB>&amp;rsquo; to autofill the
full path&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:&lt;span style="color:#a6e22e">e&lt;/span> %:&lt;span style="color:#a6e22e">h&lt;/span>/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="custom-settings-for-different-filetypes--languages-ftplugin">Custom Settings For Different Filetypes / Languages: ftplugin&lt;/h2>
&lt;p>By using the &lt;code>ftplugin&lt;/code> directory, you can apply different settings or keymaps
for different languages and filetypes.&lt;/p>
&lt;p>For example: In the &lt;code>$HOME/.config/nvim/ftplugin/javascript.vim&lt;/code> file
&lt;code>nnoremap ,get :read $VIMPATH/snippets/js/get.js&amp;lt;CR&amp;gt;&lt;/code>&lt;/p>
&lt;p>when you run this keymap, it will pipe the contents of the &lt;code>.js&lt;/code> file into
your current buffer&lt;/p>
&lt;h2 id="sorting">Sorting&lt;/h2>
&lt;p>Highlight the lines you want to sort, then run the command: &lt;code>:sort&lt;/code>&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// before
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">banana&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;banana&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">durian&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;durian&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">cantalope&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cantalope&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">apple&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;apple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// after
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">apple&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;apple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">banana&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;banana&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">cantalope&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cantalope&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">durian&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;durian&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="columns">Columns&lt;/h2>
&lt;p>Highlight (using shift+v) the lines you want, then run the command &lt;code>:!column --table&lt;/code>.
This will organize the spacing for you.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// before
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">apple&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;apple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">banana&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;banana&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">cantalope&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cantalope&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">durian&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;durian&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// after
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">apple&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;apple&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">banana&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;banana&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">cantalope&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cantalope&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">durian&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;durian&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="multiple-commands-in-one">Multiple Commands In One&lt;/h2>
&lt;p>You can execute multiple commands in one command by separating them with &lt;code>|&lt;/code>.
Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:%&lt;span style="color:#a6e22e">s&lt;/span>&lt;span style="color:#e6db74">/hello/&lt;/span>&lt;span style="color:#a6e22e">world&lt;/span> | %&lt;span style="color:#a6e22e">s&lt;/span>&lt;span style="color:#e6db74">/foo/&lt;/span>&lt;span style="color:#a6e22e">bar&lt;/span> | %&lt;span style="color:#a6e22e">s&lt;/span>&lt;span style="color:#e6db74">/hello/&lt;/span>&lt;span style="color:#a6e22e">goodbye&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-case-generating-a-file">Use Case: Generating A File&lt;/h3>
&lt;p>Sometimes you just need to quickly create a file with some boilerplate in it,
to do this you can make vim open and read file, then pipe it into your current buffer.&lt;/p>
&lt;p>You can create a snippets folder that holds all of your snippets or boilerplate.
Using these files, I can generate the files I want by combining commands in VIM.&lt;/p>
&lt;p>Example: I have a snippet file called &lt;code>test.js.&lt;/code> In this file, I have some boilerplate for a
test file for a nodejs project. In any given project, I can generate a new test file in the same directory as
my current buffer is in using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>:&lt;span style="color:#a6e22e">e&lt;/span> %:&lt;span style="color:#a6e22e">h&lt;/span>&lt;span style="color:#e6db74">/mytest.test.js | read /&lt;/span>&lt;span style="color:#a6e22e">path&lt;/span>&lt;span style="color:#e6db74">/to/&lt;/span>&lt;span style="color:#a6e22e">snippet&lt;/span>/&lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">js&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="windows">Windows&lt;/h2>
&lt;h3 id="hiding-windows">Hiding Windows&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">noremap&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">leader&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">hh&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">C&lt;/span>-&lt;span style="color:#a6e22e">w&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">h&lt;/span>:&lt;span style="color:#a6e22e">hide&lt;/span>&amp;lt;&lt;span style="color:#a6e22e">CR&lt;/span>&amp;gt; &lt;span style="color:#75715e">&amp;#34; hide the left window&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#a6e22e">noremap&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">leader&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">hj&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">C&lt;/span>-&lt;span style="color:#a6e22e">w&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">j&lt;/span>:&lt;span style="color:#a6e22e">hide&lt;/span>&amp;lt;&lt;span style="color:#a6e22e">CR&lt;/span>&amp;gt; &lt;span style="color:#75715e">&amp;#34; hide the bottom window&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#a6e22e">noremap&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">leader&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">hk&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">C&lt;/span>-&lt;span style="color:#a6e22e">w&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">k&lt;/span>:&lt;span style="color:#a6e22e">hide&lt;/span>&amp;lt;&lt;span style="color:#a6e22e">CR&lt;/span>&amp;gt; &lt;span style="color:#75715e">&amp;#34; hide the top window&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#a6e22e">noremap&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">leader&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">hl&lt;/span> &amp;lt;&lt;span style="color:#a6e22e">C&lt;/span>-&lt;span style="color:#a6e22e">w&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">l&lt;/span>:&lt;span style="color:#a6e22e">hide&lt;/span>&amp;lt;&lt;span style="color:#a6e22e">CR&lt;/span>&amp;gt; &lt;span style="color:#75715e">&amp;#34; hide the right window&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>